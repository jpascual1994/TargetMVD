// Place all the behaviors and hooks related to the matching controller here.
// All this logic will automatically be available in application.js.
// You can use CoffeeScript in this file: http://coffeescript.org/
var map;
// Montevideo latitude and longitude
const default_lat = -34.906349;
const default_lng = -56.19992;
const targetColor = '#efc638';
const selectedTargetColor = '#2fbcf7';
const defautRadius = 50;

var pos = {
  lat: default_lat,
  lng: default_lng
};

var newTarget;
var selectedTarget = null;
var selectedTargetMarker = null;

var firstLogin;

function initMap() {
  map = new google.maps.Map(document.getElementById('map'), {
    center: pos,
    zoom: 16
  });

  var marker = new google.maps.Marker({
    position: pos,
    map: map,
    icon: '<%= image_path "marker.png" %>'
  });

  if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(function(position) {
      pos = {
        lat: position.coords.latitude,
        lng: position.coords.longitude
      };

      map.panTo(pos);
      marker.setPosition(pos);
    }, function() {
      // User has disable Geolocation
      alert('Plese enable your location')
    });
  };

  map.addListener('click', function(e) {
    createTarget(e.latLng);
  });

  newTarget = new google.maps.Circle({
    strokeColor: targetColor,
    strokeWeight: 2,
    fillColor: '#FFFFFF',
    fillOpacity: 0.70,
    map: map,
    radius: defautRadius
  });
}

function displayTargets() {
  var route = $('.get-targets-path').data('path');
  $.get(route).done(function(data) {
    $.each(data.user_targets, function(i, val) {
      var targetPos = {
        lat: val.lat,
        lng: val.lng
      }
      showTarget(targetPos, val.radius, val.icon, val.id, val.route)
    })
  })
}

function showTarget(position, radius, icon, targetId, route){
  var newTargetCircle = new google.maps.Circle({
    strokeWeight: 0,
    fillColor: targetColor,
    fillOpacity: 0.70,
    map: map,
    center: position,
    radius: radius,
    targetId: targetId,
    route: route
  });

  var newTargetMarker = new google.maps.Marker({
    position: position,
    map: map,
    icon: {
      url: icon,
      anchor: new google.maps.Point(6, 6)
    },
    targetId: targetId
  });

  newTargetCircle.addListener('click', function() {
    deselectTarget();
    this.setOptions({ fillColor: selectedTargetColor });
    selectedTarget = this;
    selectedTargetMarker = newTargetMarker;
    targetInfo(targetId, route);
  });
};

function createTarget(pos) {
  if (firstLogin) {
    refreshCreateForm();
    newTarget.setRadius(50);
    map.panTo(pos);
    newTarget.setCenter(pos);
    deselectTarget();
    closeChat();
  }
}

function backToHome() {
  $('.home-left-new-target, .home-left-delete-target').addClass('hidden');
  $('.edit-user-container').remove();
  $('.home-left-top, .home-left').removeClass('hidden');
  $('.home-left-chat-section').remove();
  newTarget.setCenter(null);
  removeErrorMsgs();
  deselectTarget();
  closeChat();
}

function selectTopicEvent() {
  $('.topic').removeClass('selected');
  $(this).addClass('selected');
  $('.targets-list').addClass('hidden');
  $('.select-topic').html(this.innerHTML)
}

function changeTargetRadius() {
  newTarget.setRadius(parseInt($('#selected-area option:selected').val()));
}

function postNewTarget() {
  var center = newTarget.getCenter();
  var url = $('.create-target.principal-button').data('user-targets-path');
  var radio = newTarget.getRadius();

  var params = {
    user_target: {
      area: radio,
      title: $('#new-target-title').val(),
      latitude: center.lat(),
      longitude: center.lng(),
      topic_id: $('.topic.selected').data('id'),
    }
  };

  removeErrorMsgs();

  $.post(url, params, null, 'json')
    .done(function(data) {
      var target = data.target;
      showTarget(center, radio, target.icon, target.id, target.route);
      newTarget.setCenter(null);
      backToHome();
      $('.chats-section').html(data.chat_section);
    }).fail(function(data) {
      $.each(data.responseJSON, function(i,v) {
        $('.create-target-middle').append("<p class='error-msg'>"+ v +"</p>");
      })
    })
}

function removeErrorMsgs() {
  $('.error-msg').remove();
}

function deselectTarget() {
  if(selectedTarget != null) {
    selectedTarget.setOptions({ fillColor: targetColor });
    selectedTarget = null;
    selectedTargetMarker = null;
  }
}

function refreshCreateForm(){
  $('.home-left-new-target').removeClass('hidden');
  $('#new-target-title').val('');
  $('#selected-area').val(50);
  $('.select-topic').html('What do you want to talk about?');
  $('.topic').removeClass('selected');
  $('.targets-list, .home-left, .home-left-delete-target').addClass('hidden');
}

function targetInfo(targetId, route) {
  $.get(route);
  newTarget.setCenter(null);
}

function destroyTarget(route) {
  var respond = confirm('You really want to delete the target?');
  if (respond == true) {
    $.ajax({
      url: route,
      type: 'DELETE',
    }).done(function(data) {
      $('.chats-section').html(data.chat_section);
      selectedTarget.setCenter(null);
      selectedTargetMarker.setMap(null);
      backToHome();
    }).fail(function() {
      alert('Sorry, there was an error.');
    });
  }
}

function openChat() {
  window.chatOpen = $(this).data('match-id');
  var url = $(this).data('show-chat-url');
  $.get(url).done(function() {
    scrollChat();
    var chatId = $('.chat-middle').data('chat-id');
    App.chatChannel = App.cable.subscriptions.create({ channel: 'ChatChannel', chat_id: chatId }, {
      received: function(data) {
        if (data.match_id === window.chatOpen) {
          var userId = $('.chat-middle').data('user-id');
          $('.chat-section').append(data.new_message);
          if (data.sender !== userId)
            $('.chat-section .message').last().removeClass('my-message').addClass('his-message');
          scrollChat();
        }
      }
    });
    readMessages();
  });
}

function sendMessage(message) {
  var chatMiddle = $('.chat-middle');
  var from = chatMiddle.data('user-id');
  var to = $('.right-topic-info .user-name').data('other-user-id');
  var chat = chatMiddle.data('chat-id');
  var url = chatMiddle.data('message-path');

  var data = {
    message: {
      text: message,
      from_id: from,
      to_id: to,
      chat_id: chat
    }
  };
  $.post(url,data);
}

function closeChat(){
  if (App.chatChannel !== undefined){
    App.chatChannel.unsubscribe();
  }
  window.chatOpen = undefined;
}

function scrollChat() {
  var scrollHeight = $('.chat-section')[0].scrollHeight;
  $('.chat-section').scrollTop(scrollHeight);
}

function readMessages() {
  $.post($('.chat-middle').data('read-messages-path'));
  unreads = $('.home-left-top .match[data-match-id="' + window.chatOpen + '"] .unread-msgs');
  unreads.html(0);
  unreads.addClass('hidden');
}

function createTargetEvents() {
  $('.home-container').on('click', '.back-button', backToHome);

  $('.select-topic').click(function() {
    $('.targets-list').toggleClass('hidden');
  });

  $('.topic').click(selectTopicEvent);

  $('#selected-area').change(changeTargetRadius);

  $('.home-left-new-target .principal-button').click(postNewTarget);
}

function deleteTargetEvents() {
  $('.home-container').on('click', '.destroy-target', function() {
    destroyTarget(selectedTarget.route);
  });
}

function activateMapEvents() {
  $('.welcome-screen').addClass('hidden');
  displayTargets();
  createTargetEvents();
  deleteTargetEvents();
}

function editFirstLoginEvent() {
  $('.welcome-bottom .principal-button').click(function() {
    var route = $(this).data('edit-user-path');
    var data = { user: { first_login: 'true' } };

    $.ajax({
      url: route,
      data: data,
      type: 'PATCH',
    }).done(function() {
      firstLogin = true;
      activateMapEvents();
      $('.home-left-top').removeClass('hidden');
    })
  });
}

function editUserEvents() {
  $('.edit-label').click(function() {
    var url = $(this).data('user-edit-path');
    $.get(url);
  });
}

function newMatchModalEvents() {
  $('.new-match-modal .skip-link').click(function() {
    $('.new-match-modal').modal('hide');
  });
  $('.new-match-modal .modal-button').click(function() {
    closeChat();
    matchId = $('.new-match-user h4').data('match-id');
    $('.new-match-modal').modal('hide');
    backToHome();
    $('[data-match-id="' + matchId + '"]').click();
  });
}

function chatEvents() {
  $('.home-container').on('click', '.match', openChat);
  $('.home-container').on('keypress','.new-message-box', function(e) {
    if (e.keyCode == 13) {
      sendMessage($(this).val());
      $(this).val('');
    }
  })
}

function newMessageModalEvents() {
  $('.new-message-modal .skip-link').click(function() {
    $('.new-message-modal').modal('hide');
  });

  $('.new-message-modal .modal-button').click(function() {
    closeChat();
    matchId = $('.new-message-user h4').data('match-id');
    $('.new-message-modal').modal('hide');
    backToHome();
    $('[data-match-id="' + matchId + '"]').click();
  });
}

$(document).ready(function() {
  firstLogin = $('.home-container').data('first-login');
  initMap();
  editFirstLoginEvent();
  editUserEvents();
  newMatchModalEvents();
  newMessageModalEvents();
  chatEvents();
  if (firstLogin) {
    activateMapEvents();
  } else {
    $('.home-left-top').addClass('hidden');
  }
});
